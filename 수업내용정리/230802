08.02

service account

Kubernetes.io/service-account-token #계정에 대한 토큰, 공개인증서 데이터까지 생성해줌
# 서비스 계정 (ServiceAccount)
# - 쿠버네티스 클러스터를 사용할 계정을 생성하여 각 계정에 다양한 권한을 부여하여 
#   클러스터를 관리 및 사용
# - 네임스페이스 별 접근 권한 또는 모든 네임스페이스에 대한 접근 권한을 부여할 수 있음
# - 네임스페이스 별 접근 권한을 role/rolebinding을 통해  구성
# - 모든 네임스페이스에 대한 접근 권한은 ClusterRole/ClusterRolebinding을 통해 구성
# - 쿠버네티스의 다양한 리소스를 다룰 수 있는 권한을 부여할 수 있으며, 리소스는 Pod, ReplicaSet, 
#   Deployment, DaemonSet 등과 각 리소스의 생성/삭제/수정/조회 등의 작업 권한도 부여할 수 있음
# - 외부에서 접근하는 계정에 대한 인증은 토큰 또는 인증서, openid  등을 통해 인증을 하게 됨
#secret = 암호화된 파일, 암호화된 인증값이 들어가있음 (base64형식으로 인코딩되어 저장, 암호값을 확인하려면 base64로 디코딩해야함)


#service_account/01_account.yaml 생성

#등록 후 확인
kubectl describe sa user1
 sa service account 약자
kubectl get secret/user1-secret

#디코딩
kubectl get secret/user1-secret -o json
 ca.crt 확인
echo "ca.crt 값 넣고 " | base64 --decode

#디코딩 쉽게 하는 방법
kubectl get secret/user1-secret -o jsonpath='{.data.ca\.crt}' | base64 --decode
kubectl get secret/user1-secret -o jsonpath='{.data.token}' | base64 --decode

#service_account/01_role.yaml 생성 후 apply

#계정과 role을 연결 시켜야함 service_account/01_role_binding.yaml 생성 후 apply


#확인
kubectl describe role user1-role
kubectl describe rolebinding user1-rolebinding

-------------------------------------------------------------------------

실습))) wn1에 적용해보기

kubectl 명령어 사용은 할 수 있지만 get nodes 같은거 사용 못함
k8sAPI에 접속해서 명령을 전달하는 권한을 설정하려면 .kube/config가 있어야함
ctrl에는 모든 권한을 가지는 .kube/config 있는데 일부 권한을 제한한 config를 wn에 설정 해줘야함 

#vi .kube/config
 certificate-authority-data: 
 server: https://kube-controller:6443 클러스터 서버 주소

#wn1에 confing 파일 생성
mkdir .kube

vi .kube/ca.crt
: ca.crt 붙여넣기

kubectl config set-cluster user1-kube --server=https://kube-controller:6443 --embed-certs --certificate-authority=.kube/ca.crt
: Cluster "user1-kube" set. 떠야함

kubectl config set-credentials user1 --token=토큰값 붙여넣기
: User "user1" set. 떠야함

kubectl config set-context user1@kubernetes --cluster=user1-kube --user=user1
: 클러스터 / 유저 정보를 묶어주는것 user1은 user1-kube 클러스터 이용하는 유저, 이 유저는 user1@kubernetes다 라고 설정

kubectl config use-context user1@kubernetes
: 생성한 user1@kubernetes 유저로 사용하겠다


#01_pod_create.yaml 생성 후 apply

# 확인 : 현재 가진 권한 create, get
kubectl get pods role-test-pod -> 확인 가능
kubectl get pods -> 이건 안됨 권한이 없음 list 권한 필요
 kubectl get pods -w -> watch권한 필요
 

#01_pod_yaml 수정
   labels:
    name: role-test-pod
    add: label
-> 오류 뜸 권한 없어서 patch 권한 필요
